//初始化echarts,并和框体map绑定。
var myChart = echarts.init(document.getElementById('map'));

//手工写入的一个迁徙线的数据，正常项目中应该是由AJAX或其他方式来获取数据。
var linesdata = [];
var linesmax=[];
/*$("#button").click(function(){
	$.post("map", {
		year:2020,
		month:3,
		day:1,
		num:10
	},function (data) {
		console.log(option.series[1].data);

		option.series[1].data=data;//1是普通线2是最多线
		console.log(data);
		myChart.setOption(option);
	});
});*/
function getLines() {

	$.ajax({
		type: "POST",
		dataType: "json",
		url: "/map" ,
		data: $('#form1').serialize(), //提交的数据
		success: function (result) {
			if(result==null){
				alert("请输入正确的日期！");
			}else{
				console.log(option.series[1].data);

				option.series[1].data=result;//1是普通线2是最多线
				console.log(result);
				myChart.setOption(option);
			}


		},
		error : function() {
			alert("请输入正确的日期！");
		}
	});

	return false;
}
var points=[];
get(points,-73.9455423735905,40.746204628329735,"[ 40.74620463 -73.94554237]");
get(points,-73.99461615,40.68572084,"[ 40.68572084 -73.99461615]");
get(points,-73.99896002861651,40.729943216211865,"[ 40.72994322 -73.99896003]");
get(points,-73.93975362666667,40.710078581666664,"[ 40.71007858 -73.93975363]");
get(points,-73.96510629790686,40.76627052249709,"[ 40.76627052 -73.9651063 ]");
get(points,-73.93466245,40.79700875,"[ 40.79700875 -73.93466245]");
get(points,-73.96857115285714,40.67601558571428,"[ 40.67601559 -73.96857115]");
get(points,-73.90764258636474,40.699878681747585,"[ 40.69987868 -73.90764259]");
get(points,-73.98291255048561,40.762785788702345,"[ 40.76278579 -73.98291255]");
get(points,-73.95846899416766,40.81242125186572,"[ 40.81242125 -73.95846899]");
get(points,-74.04101595282555,40.7189706573519,"[ 40.71897066 -74.04101595]");
get(points,-73.91376883565674,40.76560480783563,"[ 40.76560481 -73.91376884]");
get(points,-74.00816760453644,40.71896193429683,"[ 40.71896193 -74.0081676 ]");
get(points,-73.97811631142858,40.73703841142857,"[ 40.73703841 -73.97811631]");
get(points,-73.98184082511403,40.71811782022413,"[ 40.71811782 -73.98184083]");
get(points,-73.96211779000001,40.694315685,"[ 40.69431568 -73.96211779]");
get(points,-73.92662683333333,40.693508333333334,"[ 40.69350833 -73.92662683]");
get(points,-73.95496461940077,40.71822447613552,"[ 40.71822448 -73.95496462]");
get(points,-73.99578432170914,40.7530863374495,"[ 40.75308634 -73.99578432]");
get(points,-73.95217566091723,40.78963090310643,"[ 40.7896309  -73.95217566]");
get(points,-73.977467296,40.787452422,"[ 40.78745242 -73.9774673 ]");
get(points,-73.99347232,40.67022625,"[ 40.67022625 -73.99347232]");
get(points,-73.93526684,40.76706182,"[ 40.76706182 -73.93526684]");
get(points,-73.98622071027393,40.684864089829915,"[ 40.68486409 -73.98622071]");
get(points,-73.90853728461647,40.68403597634552,"[ 40.68403598 -73.90853728]");
get(points,-73.92571525,40.70881125,"[ 40.70881125 -73.92571525]");
get(points,-74.00757666142857,40.70514201857143,"[ 40.70514202 -74.00757666]");
get(points,-73.98885395825192,40.70132652051545,"[ 40.70132652 -73.98885396]");
get(points,-74.00757795224794,40.67460290678922,"[ 40.67460291 -74.00757795]");
get(points,-73.94330733333334,40.684574966666666,"[ 40.68457497 -73.94330733]");
get(points,-73.9311823652659,40.754055711017074,"[ 40.75405571 -73.93118237]");
get(points,-73.97870251509806,40.751844241628746,"[ 40.75184424 -73.97870252]");
get(points,-73.95897404173279,40.73362280344193,"[ 40.7336228  -73.95897404]");
get(points,-73.95503291479615,40.77617393965242,"[ 40.77617394 -73.95503291]");
get(points,-73.98938258784516,40.73428882856054,"[ 40.73428883 -73.98938259]");
get(points,-73.96389882629725,40.685064362433906,"[ 40.68506436 -73.96389883]");
get(points,-73.9881742875874,40.77806113799842,"[ 40.77806114 -73.98817429]");
get(points,-73.98293159608225,40.66509905438012,"[ 40.66509905 -73.9829316 ]");
get(points,-73.97177374237468,40.69751139094924,"[ 40.69751139 -73.97177374]");
get(points,-74.07126188278198,40.71928220070702,"[ 40.7192822  -74.07126188]");
get(points,-73.954724769428,40.675111344895626,"[ 40.67511134 -73.95472477]");
get(points,-74.00570747559796,40.745053013731805,"[ 40.74505301 -74.00570748]");
get(points,-73.94977042000001,40.80218928,"[ 40.80218928 -73.94977042]");
get(points,-73.96853644805206,40.800142118576595,"[ 40.80014212 -73.96853645]");
get(points,-73.99916551375,40.712948751249996,"[ 40.71294875 -73.99916551]");
get(points,-73.94465555333333,40.704767043333334,"[ 40.70476704 -73.94465555]");
get(points,-73.93993538006592,40.71864838235913,"[ 40.71864838 -73.93993538]");
get(points,-73.92462576666667,40.77626673333333,"[ 40.77626673 -73.92462577]");
get(points,-73.94582873499999,40.7768581125,"[ 40.77685811 -73.94582873]");
get(points,-74.04044330120087,40.748715945380226,"[ 40.74871595 -74.0404433 ]");
get(points,-73.96815223875,40.75806929125,"[ 40.75806929 -73.96815224]");
get(points,-73.99272778690062,40.7621806179931,"[ 40.76218062 -73.99272779]");
get(points,-73.975681865,40.7272063125,"[ 40.72720631 -73.97568186]");
get(points,-73.974372245,40.69198635,"[ 40.69198635 -73.97437224]");
get(points,-73.9420854375,40.799723025,"[ 40.79972302 -73.94208544]");
get(points,-73.96508106666667,40.71061171666667,"[ 40.71061172 -73.96508107]");
get(points,-73.9737802694773,40.67971605586932,"[ 40.67971606 -73.97378027]");
get(points,-74.00966495275497,40.656244220581584,"[ 40.65624422 -74.00966495]");
get(points,-73.92410166666667,40.69796866666667,"[ 40.69796867 -73.92410167]");
get(points,-74.00693007333334,40.735340396666665,"[ 40.7353404  -74.00693007]");
get(points,-73.91379166666667,40.698366666666665,"[ 40.69836667 -73.91379167]");
get(points,-73.98810754750001,40.750511073750005,"[ 40.75051107 -73.98810755]");
get(points,-73.97764137909968,40.776206191709164,"[ 40.77620619 -73.97764138]");
get(points,-73.99110531333334,40.720661148333335,"[ 40.72066115 -73.99110531]");
get(points,-73.95715164,40.66379288,"[ 40.66379288 -73.95715164]");
get(points,-74.01655576666667,40.708517173333334,"[ 40.70851717 -74.01655577]");
get(points,-73.93726471,40.699287938333335,"[ 40.69928794 -73.93726471]");
get(points,-73.94983429,40.69763486,"[ 40.69763486 -73.94983429]");
get(points,-73.95245991,40.74724064,"[ 40.74724064 -73.95245991]");
get(points,-73.95597786166667,40.72703514,"[ 40.72703514 -73.95597786]");
get(points,-74.00271317679506,40.72482871074233,"[ 40.72482871 -74.00271318]");
get(points,-73.93609082346597,40.742993491186645,"[ 40.74299349 -73.93609082]");
get(points,-73.95384020130714,40.70748413020265,"[ 40.70748413 -73.9538402 ]");
get(points,-73.9943697744742,40.738441140496555,"[ 40.73844114 -73.99436977]");
get(points,-73.95201989666667,40.68806783,"[ 40.68806783 -73.9520199 ]");
get(points,-73.92354014285715,40.75895917142857,"[ 40.75895917 -73.92354014]");
get(points,-73.946119196,40.794054396,"[ 40.7940544 -73.9461192]");
get(points,-73.99101706545528,40.69009982419402,"[ 40.69009982 -73.99101707]");
get(points,-73.94993523901303,40.72177207039117,"[ 40.72177207 -73.94993524]");
get(points,-73.97251190684723,40.76309669380086,"[ 40.76309669 -73.97251191]");
get(points,-73.96420866666666,40.791175233333334,"[ 40.79117523 -73.96420867]");
get(points,-73.9298911,40.6794268,"[ 40.6794268 -73.9298911]");
get(points,-73.98568725833334,40.73954758166666,"[ 40.73954758 -73.98568726]");
get(points,-73.971892145,40.782861095,"[ 40.7828611  -73.97189214]");
get(points,-73.98716818714286,40.72715347,"[ 40.72715347 -73.98716819]");
get(points,-74.0019338,40.7595293925,"[ 40.75952939 -74.0019338 ]");
get(points,-74.00988766352275,40.711275262551816,"[ 40.71127526 -74.00988766]");
get(points,-73.95549686666666,40.76687239666666,"[ 40.7668724  -73.95549687]");
get(points,-73.93909813974487,40.76103066382075,"[ 40.76103066 -73.93909814]");
get(points,-73.91699,40.710296666666665,"[ 40.71029667 -73.91699   ]");
get(points,-73.91814666666666,40.69188,"[ 40.69188    -73.91814667]");
get(points,-73.98861403469918,40.67835948798477,"[ 40.67835949 -73.98861403]");
get(points,-73.90683,40.692278,"[ 40.692278 -73.90683 ]");
get(points,-73.94334126666666,40.80873806666667,"[ 40.80873807 -73.94334127]");
get(points,-73.95543718333333,40.8026229,"[ 40.8026229  -73.95543718]");
get(points,-73.90133399999999,40.6982,"[ 40.6982   -73.901334]");
get(points,-73.97948716690526,40.674748707741955,"[ 40.67474871 -73.97948717]");
get(points,-73.911028,40.706764,"[ 40.706764 -73.911028]");
get(points,-73.97162035166667,40.75194472806667,"[ 40.75194473 -73.97162035]");
get(points,-73.99423876640329,40.69361085291992,"[ 40.69361085 -73.99423877]");
get(points,-73.97453284495212,40.74294967608043,"[ 40.74294968 -73.97453284]");
get(points,-73.998046805,40.6767066,"[ 40.6767066  -73.99804681]");
get(points,-73.917524775,40.77214035,"[ 40.77214035 -73.91752478]");
get(points,-73.99611034287084,40.72161104278101,"[ 40.72161104 -73.99611034]");
get(points,-73.98860847924168,40.769222624108885,"[ 40.76922262 -73.98860848]");
get(points,-74.01146166730943,40.678267720558985,"[ 40.67826772 -74.01146167]");
get(points,-73.98043587862112,40.7821443764994,"[ 40.78214438 -73.98043588]");
get(points,-73.94509069642767,40.71472973047046,"[ 40.71472973 -73.9450907 ]");
get(points,-73.935775,40.686312,"[ 40.686312 -73.935775]");
get(points,-73.92750975,40.701199,"[ 40.701199   -73.92750975]");
get(points,-73.97531321466977,40.68579041551363,"[ 40.68579042 -73.97531321]");
get(points,-73.95241511428571,40.73202456285714,"[ 40.73202456 -73.95241511]");
get(points,-73.927511175,40.764948375,"[ 40.76494838 -73.92751118]");
get(points,-73.949193216365,40.78239898208879,"[ 40.78239898 -73.94919322]");
get(points,-73.98848615386997,40.66930371164303,"[ 40.66930371 -73.98848615]");
get(points,-73.99314353857143,40.71391916857143,"[ 40.71391917 -73.99314354]");
get(points,-73.981800806887,40.69010299220631,"[ 40.69010299 -73.98180081]");
get(points,-73.94021452412363,40.75166358200093,"[ 40.75166358 -73.94021452]");
get(points,-73.9802820725,40.699074339999996,"[ 40.69907434 -73.98028207]");
get(points,-73.938272525,40.80519195,"[ 40.80519195 -73.93827253]");
get(points,-73.9382106775,40.6807445225,"[ 40.68074452 -73.93821068]");
get(points,-73.98100782540521,40.73034975856729,"[ 40.73034976 -73.98100783]");
get(points,-74.01290037285715,40.70270915571429,"[ 40.70270916 -74.01290037]");
get(points,-73.98019216,40.713136686666665,"[ 40.71313669 -73.98019216]");
get(points,-73.96042458739899,40.777464180455674,"[ 40.77746418 -73.96042459]");
get(points,-73.99963222,40.738585255000004,"[ 40.73858526 -73.99963222]");
get(points,-73.9346175,40.71385975,"[ 40.71385975 -73.9346175 ]");
get(points,-73.96913860677165,40.70665229472524,"[ 40.70665229 -73.96913861]");
get(points,-73.99757105354401,40.7459816146592,"[ 40.74598161 -73.99757105]");
get(points,-73.99903838833333,40.6825473,"[ 40.6825473  -73.99903839]");
get(points,-73.9625314338,40.801224399999995,"[ 40.8012244  -73.96253143]");
get(points,-73.97337008142208,40.79192856513624,"[ 40.79192857 -73.97337008]");
get(points,-74.00531687285714,40.71053526142857,"[ 40.71053526 -74.00531687]");
get(points,-73.98012237,40.66984333333333,"[ 40.66984333 -73.98012237]");
get(points,-73.92019766666667,40.70536083333333,"[ 40.70536083 -73.92019767]");
get(points,-73.96387532,40.8068705,"[ 40.8068705  -73.96387532]");
get(points,-73.99351720782043,40.72985026834304,"[ 40.72985027 -73.99351721]");
get(points,-73.99100734773864,40.75785164399939,"[ 40.75785164 -73.99100735]");
get(points,-73.93983679666667,40.7895249,"[ 40.7895249 -73.9398368]");
get(points,-74.00338289433333,40.7509119355,"[ 40.75091194 -74.00338289]");
get(points,-74.00988659645901,40.72715389194445,"[ 40.72715389 -74.0098866 ]");
get(points,-73.9488583,40.77408089,"[ 40.77408089 -73.9488583 ]");
get(points,-73.95743236974673,40.7711961865516,"[ 40.77119619 -73.95743237]");
get(points,-73.9330948,40.773225833333335,"[ 40.77322583 -73.9330948 ]");
get(points,-73.9453716875,40.6912778275,"[ 40.69127783 -73.94537169]");
get(points,-74.0321082,40.7287448,"[ 40.7287448 -74.0321082]");
get(points,-73.9507734169075,40.81090496428255,"[ 40.81090496 -73.95077342]");
get(points,-73.97766140857144,40.72168467428571,"[ 40.72168467 -73.97766141]");
get(points,-73.904215,40.679025,"[ 40.679025 -73.904215]");
get(points,-73.97471390666779,40.66811915383448,"[ 40.66811915 -73.97471391]");
get(points,-73.94442724330139,40.724196512880035,"[ 40.72419651 -73.94442724]");
get(points,-73.96028317743843,40.711293140690394,"[ 40.71129314 -73.96028318]");
get(points,-73.9841479625,40.7563131675,"[ 40.75631317 -73.98414796]");
get(points,-73.97915258290442,40.7663987938119,"[ 40.76639879 -73.97915258]");
get(points,-73.94021407333334,40.693999436666665,"[ 40.69399944 -73.94021407]");
get(points,-74.03590696937485,40.71403242577343,"[ 40.71403243 -74.03590697]");
get(points,-73.95674732537427,40.743493701467415,"[ 40.7434937  -73.95674733]");
get(points,-73.95885349758026,40.668601961374165,"[ 40.66860196 -73.9588535 ]");
get(points,-73.95703927041245,40.7834418500475,"[ 40.78344185 -73.95703927]");
get(points,-73.95031707720192,40.71487937880072,"[ 40.71487938 -73.95031708]");
get(points,-73.91597056666667,40.75948243333333,"[ 40.75948243 -73.91597057]");
get(points,-74.01249927802752,40.716457709323215,"[ 40.71645771 -74.01249928]");
get(points,-73.9618653,40.674351,"[ 40.674351  -73.9618653]");
get(points,-73.94720423333334,40.7548568,"[ 40.7548568  -73.94720423]");
get(points,-73.91607073333333,40.77877783333333,"[ 40.77877783 -73.91607073]");
get(points,-73.98640614331794,40.69503170153381,"[ 40.6950317  -73.98640614]");
get(points,-73.98192937835854,40.74506477610281,"[ 40.74506478 -73.98192938]");
get(points,-73.977779272138,40.756712251519545,"[ 40.75671225 -73.97777927]");
get(points,-73.9832178875,40.7746778,"[ 40.7746778  -73.98321789]");
get(points,-74.04557168483734,40.72528910781132,"[ 40.72528911 -74.04557168]");
get(points,-74.00053824,40.735122925,"[ 40.73512292 -74.00053824]");
get(points,-74.00139673104376,40.71979942058902,"[ 40.71979942 -74.00139673]");
get(points,-73.94653549,40.78788314,"[ 40.78788314 -73.94653549]");
get(points,-73.95735846184,40.6816261526,"[ 40.68162615 -73.95735846]");
get(points,-74.00125696,40.688553245,"[ 40.68855325 -74.00125696]");
get(points,-73.96004910512669,40.718649439909534,"[ 40.71864944 -73.96004911]");
get(points,-73.98103134833333,40.679911331666666,"[ 40.67991133 -73.98103135]");
get(points,-73.96387346231839,40.77130218308132,"[ 40.77130218 -73.96387346]");
get(points,-73.96283211635443,40.795906581637105,"[ 40.79590658 -73.96283212]");
get(points,-73.99288654,40.766992217500004,"[ 40.76699222 -73.99288654]");
get(points,-74.00342423483953,40.74115822764427,"[ 40.74115823 -74.00342423]");
get(points,-73.91736666666667,40.68683333333333,"[ 40.68683333 -73.91736667]");
get(points,-73.96127087320869,40.75959581594424,"[ 40.75959582 -73.96127087]");
get(points,-73.9056152,40.7060794,"[ 40.7060794 -73.9056152]");
get(points,-73.98775963666667,40.714818963333336,"[ 40.71481896 -73.98775964]");
get(points,-73.95738348325139,40.69187893701886,"[ 40.69187894 -73.95738348]");
get(points,-73.9491656927736,40.68178648981446,"[ 40.68178649 -73.94916569]");
get(points,-73.912276,40.688966,"[ 40.688966 -73.912276]");
get(points,-73.92914999999999,40.704918,"[ 40.704918 -73.92915 ]");
get(points,-73.9107975,40.77210973333333,"[ 40.77210973 -73.9107975 ]");
get(points,-73.96725829333333,40.693774536666666,"[ 40.69377454 -73.96725829]");
get(points,-73.98900574923157,40.74454787078028,"[ 40.74454787 -73.98900575]");
get(points,-73.932428175,40.76017685,"[ 40.76017685 -73.93242817]");
get(points,-73.931605,40.696505,"[ 40.696505 -73.931605]");
get(points,-73.9247782888072,40.76949414499927,"[ 40.76949414 -73.92477829]");
get(points,-73.96925544333334,40.68706993,"[ 40.68706993 -73.96925544]");
get(points,-73.91879233333333,40.698359333333336,"[ 40.69835933 -73.91879233]");
get(points,-73.9354882,40.705253400000004,"[ 40.7052534 -73.9354882]");
get(points,-73.98454742969524,40.72217152724096,"[ 40.72217153 -73.98454743]");
get(points,-73.9949850575,40.699802382499996,"[ 40.69980238 -73.99498506]");




//echarts中使用地图的配置参数
var option = {
    bmap: {
        // 百度地图中心经纬度 坐标拾取器http://api.map.baidu.com/lbsapi/getpoint/index.html
        center: [-73.98997825,40.72019576],
        // 百度地图缩放等级，数字越大，放大越大，地图比例尺越小
        zoom: 14,
        // 是否开启拖拽缩放，可以只设置 'scale' 或者 'move'
        roam: true,
        // mapStyle是百度地图的自定义样式，见 http://developer.baidu.com/map/custom/
        mapStyle: {
            styleJson: [/*{
                "featureType": "water",
                "elementType": "all",
                "stylers": {
                    "color": "#021019"
                }
            },
                {
                    "featureType": "highway",
                    "elementType": "geometry.fill",
                    "stylers": {
                        "color": "#000000"
                    }
                },
                {
                    "featureType": "highway",
                    "elementType": "geometry.stroke",
                    "stylers": {
                        "color": "#147a92"
                    }
                },
                {
                    "featureType": "arterial",
                    "elementType": "geometry.fill",
                    "stylers": {
                        "color": "#000000"
                    }
                },
                {
                    "featureType": "arterial",
                    "elementType": "geometry.stroke",
                    "stylers": {
                        "color": "#0b3d51"
                    }
                },
                {
                    "featureType": "local",
                    "elementType": "geometry",
                    "stylers": {
                        "color": "#000000"
                    }
                },
                {
                    "featureType": "land",
                    "elementType": "all",
                    "stylers": {
                        "color": "#08304b"
                    }
                },
                {
                    "featureType": "railway",
                    "elementType": "geometry.fill",
                    "stylers": {
                        "color": "#000000"
                    }
                },
                {
                    "featureType": "railway",
                    "elementType": "geometry.stroke",
                    "stylers": {
                        "color": "#08304b"
                    }
                },
                {
                    "featureType": "subway",
                    "elementType": "geometry",
                    "stylers": {
                        "lightness": -70
                    }
                },
                {
                    "featureType": "building",
                    "elementType": "geometry.fill",
                    "stylers": {
                        "color": "#000000"
                    }
                },
                {
                    "featureType": "all",
                    "elementType": "labels.text.fill",
                    "stylers": {
                        "color": "#857f7f"
                    }
                },
                {
                    "featureType": "all",
                    "elementType": "labels.text.stroke",
                    "stylers": {
                        "color": "#000000"
                    }
                },
                {
                    "featureType": "building",
                    "elementType": "geometry",
                    "stylers": {
                        "color": "#022338"
                    }
                },
                {
                    "featureType": "green",
                    "elementType": "geometry",
                    "stylers": {
                        "color": "#062032"
                    }
                },
                {
                    "featureType": "boundary",
                    "elementType": "all",
                    "stylers": {
                        "color": "#1e1c1c"
                    }
                },
                {
                    "featureType": "manmade",
                    "elementType": "geometry",
                    "stylers": {
                        "color": "#022338"
                    }
                },
                {
                    "featureType": "poi",
                    "elementType": "all",
                    "stylers": {
                        "visibility": "off"
                    }
                },
                {
                    "featureType": "all",
                    "elementType": "labels.icon",
                    "stylers": {
                        "visibility": "off"
                    }
                },
                {
                    "featureType": "all",
                    "elementType": "labels.text.fill",
                    "stylers": {
                        "color": "#2da0c6",
                        "visibility": "on"
                    }
                }*/
            ]
        }
    },
    "title": [
        {
            "text": "纽约自行车租还情况图",
            "padding": 5,
            "itemGap": 10
        }
    ],
    visualMap: {
        type: 'continuous',
        min:0,                                  //指定 visualMapContinuous 组件的允许的最小值
        max:20,
        /*pieces: [      // 自定义每一段的范围，以及每一段的文字
            { min: 10, label: '10以上'}, // 不指定 max，表示 max 为无限大（Infinity）。
            { min: 5, max: 10, label: '5-10'},
            { min: 3, max: 5, label: '3-5'},
            { max: 3, label: '3以下'}          // 不指定 min，表示 min 为无限大（-Infinity）。
        ],*/
        seriesIndex:1,//指定series里的哪个数据
        //dimension:3,//找数据的维度
        inRange: {
            // 渐变颜色，从小到大
            //color: ['#dacfa5', '#e8cc32', '#ef9930', '#ef0002']
            color: ['#6ab92c', '#aed606', '#fef804','#ff7b00','#db253e','#5b1875']
        },
        zlevel:2,
        padding:50,
    },
    "legend": [
        {
            "data": [
                "2020-3"
            ],
            "selected": {
                "2020-3": true
            },
            "show": false,
            "padding": 5,
            "itemGap": 10,
            "itemWidth": 25,
            "itemHeight": 14
        }
    ],
//series是在地图上的线条等效果的配置文件，具体可以查阅文档。
    series: [
		{
			name: '2020.3point',
			type: 'scatter',
			coordinateSystem: 'bmap',
			data: points,
			symbolSize: 10,
			encode: {
				value: 2
			},
			zlevel: 3,
			label: {
				formatter: '{b}',
				position: 'right',
				show: false
			},
			emphasis: {
				label: {
					show: true
				}
			}
		},
    	{
        name: "2020-3",
        type: 'lines',
        coordinateSystem: 'bmap',
        zlevel: 2,
        effect: {
            show: false,
            period: 6,
            trailLength: 0,
            symbol: 'arrow',
            symbolSize: 10,
            constantSpeed: 0,

        },
        "symbol": [
            "none",
            "arrow"

        ],
        lineStyle: {
            normal: {
                color: "#a6c84c",
                width: 2,
                opacity: 0.6,
                curveness: 0.2
            }
        },
        //将手动做的一个迁徙数据放入线条的数据部分。
        data: linesdata
    },
		{
			name: "2020-3max",
			type: 'lines',
			coordinateSystem: 'bmap',
			zlevel: 3,
			effect: {
				show: true,
				period: 6,
				trailLength: 0,
				symbol: 'arrow',
				symbolSize: 10,
				constantSpeed: 0,

			},
			"symbol": [
				"none",

			],
			lineStyle: {
				normal: {
					color: "red",
					width: 3,
					opacity: 0.6,
					curveness: 0.2
				}
			},
			//将手动做的一个迁徙数据放入线条的数据部分。
			data: linesmax
		}

	],
    "tooltip": {
        "show": true,
        "trigger": "item",
        "triggerOn": "mousemove|click",
        "axisPointer": {
            "type": "line"
        },
        "showContent": true,
        "alwaysShowContent": false,
        "showDelay": 0,
        "hideDelay": 100,
        "formatter": function (params) {
            console.log(params);
            return ;

        },
        "textStyle": {
            "fontSize": 14
        },
        "borderWidth": 0,
        "padding": 5
    }

};

//配置参数传入图形实例中
myChart.setOption(option);
//初始化bmap和echarts实例绑定
var bmap = myChart.getModel().getComponent('bmap').getBMap();
bmap.addControl(new BMap.MapTypeControl());

if (document.createElement('canvas').getContext) {  // 判断当前浏览器是否支持绘制海量点


    /* var options = {
         size: BMAP_POINT_SIZE_SMALL,
         shape: BMAP_POINT_SHAPE_STAR,
         color: '#d340c3'
     }*/
    var pointCollection = new BMap.PointCollection(points);  // 初始化PointCollection
    pointCollection.addEventListener('click', function (e) {
        var opts = {
            width : 200,     // 信息窗口宽度
            height: 100,     // 信息窗口高度
            title :e.point.title , // 信息窗口标题
            enableMessage:true,//设置允许信息窗发送短息
			setTop: true
        }
        var infoWindow = new BMap.InfoWindow(e.point.lng + ',' + e.point.lat, opts);  // 创建信息窗口对象

            bmap.openInfoWindow(infoWindow,e.point); //开启信息窗口

      //  alert('单击点的坐标为：' + e.point.lng + ',' + e.point.lat);  // 监听点击事件
    });
    bmap.addOverlay(pointCollection);  // 添加Overlay
    myChart.on('click', function (params) {
        console.log(params);
        alert('数量是：'+params.data.value);
    });
} else {
    alert('请在chrome、safari、IE8+以上浏览器查看本示例');
}

function get(points,lng,lat,title) {
	points.push({
		name:title,
		value:[lng,lat]
	});
}